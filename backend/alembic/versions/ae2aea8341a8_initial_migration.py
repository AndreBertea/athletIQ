"""Initial migration

Revision ID: ae2aea8341a8
Revises: 
Create Date: 2025-07-20 23:54:56.595243

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ae2aea8341a8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('activity',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('activity_type', sa.Enum('RUN', 'TRAIL_RUN', 'RIDE', 'SWIM', 'WALK', name='activitytype'), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('moving_time', sa.Integer(), nullable=False),
    sa.Column('elapsed_time', sa.Integer(), nullable=False),
    sa.Column('total_elevation_gain', sa.Float(), nullable=False),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('average_heartrate', sa.Float(), nullable=True),
    sa.Column('max_heartrate', sa.Float(), nullable=True),
    sa.Column('average_cadence', sa.Float(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('strava_id', sa.Integer(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('streams_data', sa.JSON(), nullable=True),
    sa.Column('laps_data', sa.JSON(), nullable=True),
    sa.Column('average_pace', sa.Float(), nullable=True),
    sa.Column('normalized_power', sa.Float(), nullable=True),
    sa.Column('training_stress_score', sa.Float(), nullable=True),
    sa.Column('gear_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_strava_id'), 'activity', ['strava_id'], unique=True)
    op.create_table('stravaauth',
    sa.Column('strava_athlete_id', sa.Integer(), nullable=False),
    sa.Column('access_token_encrypted', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('refresh_token_encrypted', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('scope', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stravaauth_strava_athlete_id'), 'stravaauth', ['strava_athlete_id'], unique=True)
    op.create_table('workoutplan',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('workout_type', sa.Enum('EASY_RUN', 'INTERVAL', 'TEMPO', 'LONG_RUN', 'RECOVERY', 'FARTLEK', 'HILL_REPEAT', 'RACE', name='workouttype'), nullable=False),
    sa.Column('planned_date', sa.Date(), nullable=False),
    sa.Column('planned_distance', sa.Float(), nullable=False),
    sa.Column('planned_duration', sa.Integer(), nullable=True),
    sa.Column('planned_pace', sa.Float(), nullable=True),
    sa.Column('planned_elevation_gain', sa.Float(), nullable=True),
    sa.Column('intensity_zone', sa.Enum('ZONE_1', 'ZONE_2', 'ZONE_3', 'ZONE_4', 'ZONE_5', name='intensityzone'), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('coach_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('workout_structure', sa.JSON(), nullable=True),
    sa.Column('planned_route', sa.JSON(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('completion_percentage', sa.Float(), nullable=True),
    sa.Column('actual_activity_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['actual_activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workoutplan')
    op.drop_index(op.f('ix_stravaauth_strava_athlete_id'), table_name='stravaauth')
    op.drop_table('stravaauth')
    op.drop_index(op.f('ix_activity_strava_id'), table_name='activity')
    op.drop_table('activity')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
